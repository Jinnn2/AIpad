11: * LineArt (Konva) �?MIT-friendly board with:
15: * - Freehand pen tool: mouse draw �?Chaikin smooth �?even resample �?stack
16: * - Vector eraser: radius-based masking �?split strokes �?replace & stack sync
20: * 注意�?
21: * 1) 若报“应为表达式”，通常是某段函�?对象没正确闭合的 } �?)�?
22: *    这份完整替换版已通过语法检查，可直接覆盖本地文件�?
23: * 2) 画笔事件绑定�?<Stage> 上；预览/正式形状分别渲染在不�?Layer�?
38:const ZOOM_STEP = 1.06 // ÿ�ι��ֵ����ű��ʣ�>1 �Ŵ�<1 ��С��
102:// 预览项结构：一�?payloadId 对应一组草�?
106:  // 画布尺寸（可改成 ResizeObserver�?
110:  // 顶部 UI 状�?
113:  // 新增：控制“拐点是否在松手后转为曲线�?
116:  // 已接受（正式）形�?
122:  // 画笔配置（与 AI 协议中的 style 对齐�?
130:  // 提示词（用于后端 /suggest �?hint�?
132:  // AI 生成规模（约束模型返回的点数上限；也影响我们本地上传的人类关键点密度�?
133:  const [aiScale, setAiScale] = useState<number>(16) // 4~64 之间可调，默�?16
134:  // 绘制中的状态与“原始浮点坐标”（绝对像素，不做吸�?取整�?
138:  // 人类笔画栈（供擦�?撤销使用�?
141:  // -------- 工具模式�?pen' �?'eraser' --------
145:  // 橡皮光标圆位置（仅用于可视化半径�?
147:  // 单次擦除手势（按�?>抬起）只 pushHistory 一�?
149:   // NEW: 画布视图（无限画板）的位�?
154:    // Konva 转发的原生事�?
159:    // 可选：按住 Ctrl 时不处理，交给浏览器（如果你不想这样，删掉这两行�?
166:    // 当前缩放与位�?
168:    // 计算缩放方向：deltaY>0 缩小�?0 放大
174:    // 鼠标点对应的世界坐标（缩放前�?
185:  // 屏幕坐标(鼠标) �?世界坐标(数据/几何计算)
190:  // ===== Canvas �?JPEG Base64（最长边�?024�?====
198:    // 原始 dataURL（Konva 会把舞台渲染到一�?<canvas>�?
200:    // 用离�?<canvas> 做等比缩�?+ 压缩
219:  // AI Feed：记录每�?AI 返回包中�?id/desc（最�?50 条）
221:  // 会话：后端的 sid；lastSentIndex 仅用于计�?delta
225:  // 同步防抖计时�?
231:  // �?drawStack.ai（绝对坐标）打包�?AI 协议 strokes
239:  // -------- 简单历史栈（撤销/重做�?--------
268:  // ===== 自动同步到后端会话：drawStack �?sid 变化�?300ms 覆盖式提�?=====
297:    // —�?自动补全开�?& 倒计时（5s�?—�?
304:    // 有“当前正在预览的AI笔画�?�?认为存在预览
328:  // 导出/导入（仅导出正式 shapes �?JSON�?
347:  // 导出所有“人类笔画”为 AI v1.1 �?strokes（方便喂�?/suggest�?
359:  // AI：只�?JSON 写到 localStorage，便于手动测�?
377:  // 预览：localStorage -> 校验 -> 规范�?-> 生成草案 -> 存入 previews
392:      // 一旦进入“预览中”，就停止自动补全倒计�?
400:    // 仅负责自动补全倒计时的启动/重置；不在这里清预览（见补丁2�?
401:    // 条件：开关打开，且“当前无预览”或“强制启动�?
405:      // 每秒可视倒计�?
412:        // 触发“发送请求”：相当于点�?Ask AI 按钮
416:      // 其他情况（比如关开�?有预览）就确保没有倒计�?
421:  // 接受：把预览草案并入正式 shapes 并移除预�?
428:    // 1) 合并到正式图�?
430:    // 2) 同步写入 drawStack（关键：让橡�?撤销�?AI 生效�?
443:    // 将“接受预览”视为一次用户操作：启动/重置自动补全倒计�?
455:    // 如果打开自动补全：下次用户再动笔会重新进�?秒倒计�?
490:      // Vision 模式：准备快�?
503:      // 3) 组织请求（带上画�?viewport，方便后端裁�?验证�?
512:        mode, // �?关键：三种模式之一
528:      // === Vision 2.0 双阶�?===
540:        // 没拿�?instruction 就直接退化为“把 hint 当指令�?
543:        // Step-2：把 instruction 注入 full 流程（服务器端会�?full 处理�?
549:          // 仍用完整上下文（包含当前所�?strokes�?
552:          //�?Step-1 �?analysis + 最终指�?一并传给后�?
558:          //让后端走 Vision 2.0 �?Step-2 分支（不会再注入图片�?
563:          // 其他你已有的参数（例�?hint/gen_scale）也可以带上
588:      // === 旧流程（Vision 1.0 / full / light�?===
591:        // 会话失效：重建后重试一�?
608:        // 422/400 等优先解�?JSON detail；否则读文本
620:      // 4) 解析返回，并写入预览�?
633:      // 规范�?�?计划草案 �?放入预览
637:      const drafts = planDrafts(norm)   // 已兼�?poly/line/pen �?
672:  // Draft �?Konva 节点
698:        if (rx === 0 && ry === 0) return null  // 保护：极小尺寸时不渲�?
712:        // 关闭 RDP 后，poly 顶点完整保留；这里用 closed 形成闭合多边�?
723:  // 网格吸附（简单版�?
726:    // 仅用于“显示阶段”的可选吸附；不要在存�?上传阶段调用
732:  // 近似闭合判定（首尾距�?<= tol 像素 即视为闭合）
737:    const tol = snap ? GRID_STEP * 0.5 : 3 // snap=ON 给更宽容的阈�?
740:  // �?[x0,y0,x1,y1,...] 按需做可视吸附；用于预览线条
752:  // —�?新的整根擦除（命中即删除整条笔画�?———————————————�?
753:  // 点到线段的最短距�?
762:  // 折线到点的最小距离（绝对坐标�?
773:  // 命中检测：任一线段到圆心的最短距�?�?半径
775:    // �?pen / line / polyline / poly 都可整根擦除
782:    // --- 工具函数仅在本作用域，用�?ellipse 命中 ---
819:      // 粗筛：点是否落在包围盒“外�?r”范围内
822:      // 精确：把椭圆边界离散为折线，做点到线段距�?
863:  // 画笔/橡皮事件（根�?toolMode 分流�?
871:      // snap 打开：存储整点；snap 关闭：存储浮�?
889:      eraseGestureStarted.current = false // 新手势开�?
903:        // snap 打开：按网格追加整点；关闭：追加浮点（统一世界坐标�?
924:      setEraserCursor({ x: sx, y: sy })           // 显示光标�?
935:      // [x0,y0,x1,y1,...] �?[[x,y], ...]
938:      // 先用斜率法压直线冗余�?
940:      // —�?A) 闭合图形：绝不坍缩成直线，作�?poly 处理 —�?
948:        // 进一步减少共线冗点，但保留转�?
950:        // 入历�?
952:        // 构�?poly �?Draft �?AI 笔画
964:      // —�?B) 非闭合：根据开关决定是否转曲线 —�?
967:        // 曲线：Chaikin + 等距重采样（保留丝滑手感�?
970:        // 折线：保持拐角（tension=0 渲染�?
973:      // 直线识别（近似首�?chord 的最大偏差）
976:      // 入历�?
978:      // 构�?Draft + AI 笔画
990:        // 非直线：pen，多段；把“曲�?折线”写�?meta.curve 供渲�?tension 使用
1009:      // 极小尺寸保护：避�?0 �?�?
1011:      // 入历�?
1013:      // 构�?Draft �?AI 笔画
1035:  // —�?回车快捷键：若当前存�?AI 预览，则 Enter 自动 Accept（避免打断输入聚焦） —�?
1057:      // 关闭正在进行的绘�?预览
1140:        {/* 网格�?*/}
1143:        {/* 正式形状�?*/}
1146:          {/* 绘制中预览线条（不入 shapes�?*/}
1161:          {/* 橡皮光标圆（可视化半�?位置）；用圆角矩形等价画圆，避免额外 import */}
1178:        {/* AI 预览�?*/}